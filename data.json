{
  "tags" : [
    "#foodphotography #igfood #foodlife #foodlover #foodblogger #instafoodie #foodpost #foodofinstagram #tasty #foodie",
    "#beauty #fashionable #beautiful #fashion #stylelife #fashionblogger #style #fitnessmotivation #fit #fitness",
    "#141 #borispol #boryspil #boryspil_faces #борисполь #ukrainegirls #ukrainegirl🇺🇦 #ukrainegirls💙💛 #ukrainegirls🇺🇦 #бориспіль",
    "#instasky #redsky #skyphotography #cloudstagram #skycolors #cloud #skyview #skylovers #clouds #cloudy",
    "#happy #instaselfie #me #selﬁe #tbt #smile #selfi #celfie #selfination #salfie",
    "#tbt🔙❤️ #tbt🔙 #bestoftheday #tbtt #tebetê #tbt😍 #tbtzão #instatbt #tbt❤️ #tebete",
    "#tation #tree #naturecaptures #amazingnature #naturepics #narure #wildlife #naturelovers #hikewithpk #naturephotography",
    "#instadaily #life #instagood #fashion #kawaii #style #smile #pretty #photooftheday #beautiful",
    "#happiness #friends #photooftheday #cute #me #instagood #picoftheday #love #beautiful #smile",
    "#instapic #me #happy #instagram #instalike #photo #instamood #beautiful #instagood #picoftheday",
    "#sketch #artista #artoninstagram #artstagram #artistofinstagram #painting #arts #arte #instaart #artist",
    "#foryou #foryoupage #love #fyp #instagram #tiktok #like #follow #viral #trending #followforfollowback #instagood #likeforlikes #explorepage #explore #likes #photography #instadaily #fashion #followme #india #memes #cute #photooftheday #edits #model #comment #style #funny #bhfyp",
    "#model #video #dance #comedy #musically #funnymemes #dankmemes #tiktokmemes #s #insta #style #fun #beauty #happy #life #bollywood #fyp #memesdaily #girl #m #nature #covid #instadaily #smile #l #lol #foryou #makeup #edits #followme",
    "#funny #memes #meme #funnymemes #lol #dankmemes #love #fun #comedy #follow #memesdaily #like #instagram #humor #instagood #tiktok #funnyvideos #lmao #dank #cute #dailymemes #bhfyp #edgymemes #jokes #laugh #offensivememes #explorepage #memepage #happy #bhfyp",
    "#2019 #2020 #ordemdashqs #raposoloko #proerd #viciado #viciadoemcelularartista #agrandecoisa #alivio #culpasim",
    "#seguearegra #aceitaquedoimenos #euresolvo #rlm #matematica #professor #opensamentoatrai #oceunaoeolimite #pai #paifeliz",
    "#tamales #tamalesveganos #tamalesdeelote #vegantamales #vegan #healthyfood #delicious #veganchef #corn #corntamales",
    "#vsco #vscocam #street #model #swag #urban #streetmodel #urbanmodel #yeezy #feezy",
    "#raviagarwal #gamesofchance #rakhipeswani #ravi #tvsanthosh #of #manjunathkamath #mariamsuhail #model #lntallur #art #galleriesatdaata #galleryespace #contemporaryindianart #viralpost #delhi #artists #sudarshanshetty #online #streaming #indian #gallery #video #daata #moonisahmadshah #surabhisaraf #raqsmediacollective #nehachoksi #faizabutt #bhfyp",
    "#maandag #losgaan #terugblik #werken #wijnen #verkeer #verkocht #bijnaweekend #vaderenzoon #zondagmiddag",
    "#bridgeseries #gsttraining #girlwhogst #awakendenver #gymnasticbodies #polerwhogst #christophersommer #rings #awakengymnastics #coachsommer",
    "#europando #portugal #europa #sui #viagem #europamundo #viajar #brasileirospelomundo #brasilsui #brasileuropa #brasileirosnasui #brasilxsui #brasilxsuic #destinosincriveis #viajarpelomundo #pelomundo #loucosporviagens #suicabrasileirosmundoafora #cartaopostal #vidadeviajante #suicabrasileira #abrasileira #brasilsuic #brasilsuica #valencia #a #paris #eurotrip #europatrip #bhfyp",
    "#fitnessaustraliacecs #yogaalliance #yogaaustralia #yogaaustraliacpd #yogaallianceceu #vinyasaflowcanberra #yogateachertrainingaustralia #vinyasaflowwagga #continuingeducationyoga #yogapilatesfitness #fitnesseducation #vinyasaflowadelaide #vinyasaflowyoga #yogateachertrainingcanberra #yogatrainingadelaide #fitnessyogaupskill #fitnessyogacec #functionaltraining #fitnessnetwork #nochoreography #fatburningworkout #abs #fitnesssydney #fitnesscoaching #yogacoursescanberra #yogateachertraining #fitnessmacarthur #yogatrainingcanberra #yogatrainingwagga #bhfyp",
    "#sprayed #autostyling #sprayartist #spraylife #splatterpaint #streetartistry #wallporn #spraypaintartist #stencilart #smartrepairs",
    "#madeinvirginia #zeroeaste #sandpointshoppingdistrict #shoplocalseattle #plantbaseddoughnuts #madeinwyoming #madeinconnecticut #handmademanitoba #bestofsd #madeinseattle",
    "#tattoopain #peacocktattoo #sicktattoo #tradtattooflash #traditionalblackwork #swordtattoo #tattooeverythingelite #neotatvivace #xoymtaty #88mphtattoo",
    "#2 #lovewhatyoudo #ballerinasofig #balletdancersofinstagram #reachforthestars #rwballet #keepondancing #gratefulfordance #clubmonaco #tutusforlifelet s",
    "#oldschoolcake #cake #sprinklecake #brownies #cakes #sweet #mpetitebakehouse #schoolcake #chocolate #oldschool #homemade #desserts #cookies #cakesofinstagram #chocolatecake #traybakes #callebaut #petitebakehouserayacookies #jamandcoconutsponge #cakestagram #cheesecake #fresh #donut #sprinkles #doublechocolatechip #doughnut #marblesexycake #custard #menu #bhfyp",
    "#1619 #blacknative #blackindian #muurs #moors #israel #hebrews #aboriginalamerican #kemet #egypt",
    "#سوگند #آرش #آسرایی #موسیقی_لری #آغاسی #بهترین_صدا #تاجیکی #mehrad_jam #ناصرعبدالهی #مهرنوش",
    "#famfriday #kumikittens #ravefam #ravebabies #squad #bassheads #bassacademy2017 #tb #bass #bassbunny",
    "#catadoptionteam #catadoption #sheltercat #sheltercats #rescuecats #adoptcats #catadoptions #savesheltercats #manhattan #manhattanlife #brooklyn #brooklynblogger #savelife #brooklyncat #newyorkarea #brooklynrescue #brooklynny #saveanimalslives #newyorkcity #manhatten #newyorkers #catslover #catsinneed #catsprotection #rescuepetsofinstagram #rescuecatnetwork #adoptasheltercat #savingliveschanginglives #newyork #bhfyp"
  ],
  "tab" : [
    {
      "title" : "Tags",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_tag.png",
      "selectIcon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_tag_select.png",
      "controller" : "TLKatTagController"
    },
    {
      "title" : "Topic",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_topic.png",
      "selectIcon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_topic_select.png",
      "controller" : "TLKatTopicController"
    },
    {
      "title" : "Setting",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_setting.png",
      "selectIcon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/tab_setting_select.png",
      "controller" : "TLKatSettingController"
    }
  ],
  "topic" : {
    "banner" : [
      {
        "author" : "mlew",
        "title" : "How To Create Your First TikTok",
        "content" : "Are you ready to get started on TikTok?  You’ve come to the right place.\n\nIn this step-by-step guide, we break down everything you need to know to get started on TikTok and create your very first video — everything from how to set up your account to how to use all of TikTok’s editing tools.\n\nLet’s get started!\n\n\nTable of Contents:\n\nSet Up Your TikTok Account\nFilm and Upload Your Content\nEdit Your Video (In the App!)\nPublish Your TikTok\nGet Started on TikTok Step #1: Set Up Your TikTok Account\nBefore you can browse the famous For You page or post, you’ll have to create a TikTok account.\n\nFirst, go to the App Store or Google Play and download the TikTok app. Once downloaded, sign up with Facebook, Gmail, or Twitter, or create a new username and password using your email.\n\nCreate your first tiktok\nBy default, TikTok assigns all users a unique username made up of a random collection of letters and numbers. It’s not super cute, so let’s change that!\n\nFor best practice — and maximum cross-platform discoverability — set your username to your name or your business name, or whatever username you use for your other channels! This helps create a seamless extension of your already established brand.\n\nTikTok username\nTIP: Looking to do something different? Be creative by working with puns, punctuation, and more!\n\nOnce logged in, you’ll be brought to the homepage.\n\nIt’s time to edit your profile! To edit, tap “Me” in the bottom right corner.\n\n\n Tap “Edit Profile”.\n\ntiktok edit profile\nFirst, let’s change our TikTok profile picture. TikTok allows you to choose between a static image or a video.\n\ntiktok profile picture\nIt’s a good idea to align your profile picture, just like your username, with the picture you use across other social channels.\n\nYour profile picture isn’t the only important piece of the TikTok profile puzzle.\n\nNext, it’s time to write your TikTok bio.\n\ntiktok bio\nYour TikTok bio is important —  it’s one of the first places your audience will look. TikTok allows up to 80 characters, allowing you to share a short and sweet bio at the forefront of your profile.\n\nAdd a tiktok bio\nNot sure what to write for your bio? Here are 25 creative Instagram bio examples you’ll definitely want to copy!\n\nIf you’re one of the lucky ones, you’ll notice a “website” field in your edit settings.\n\n\nHowever, only certain TikTok accounts can capitalize on the TikTok link in bio by default right now.\nThe TikTok link in bio (website field), is one of the few places where you can add a clickable link on the app, making it a valuable resource for brands looking to drive traffic and sales.\n\nCheck out this blog post for a step-by-step on how to add a link to your TikTok bio.\n\nTikTok also allows for seamless YouTube and Instagram integration. It’s a good idea to input your Instagram and YouTube accounts so that your audience can follow you outside of TikTok.\n\n\nThey’ll be showcased on your profile next to the follow button.\n\n\nNow that your profile is all set up, it’s time to follow users and engage in content!\n\nOn TikTok, you don’t necessarily have to follow accounts to see their content. Most content appears on your personalized For You page.\n\nFollowing accounts and engaging with content lets TikTok know what you’re interested in and helps TikTok’s algorithm create a personalized For You page.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/4.png",
        "date" : "September 4, 2020"
      },
      {
        "author" : "jessica",
        "title" : "How to Add a Link to Your TikTok Bio (+ Why Your Brand Needs It!)",
        "content" : "The TikTok link in bio rollout is on its way — and it’s going to be a game-changer for brands and businesses on the app!\n\nTikTok users will be able to take advantage of the prime real estate on their TikTok profile to direct their followers outside of the app.\n\nWe’re jumping into all the benefits, details, and everything you need to know about how to get a clickable link in your TikTok bio:\n\n\nTikTok Link in Bio: How to Get a Clickable Link on Your Profile\nTikTok is testing out a new feature — the link in bio on TikTok. While still in beta-testing, many users can start to take advantage of the new social commerce feature.\n\nLike on Instagram, it will allow users to add a bolded clickable link directly on their profile.\n\nTikTok Link in Bio\nThis is huge for brands, influencers, and businesses of all sizes on TikTok, as it’s the main way to drive followers to a website or e-commerce platform.\n\nReady to add a TikTok link in bio to your profile? Here’s how:\n\nStep #1: Go to your TikTok Profile.\n\nOnly certain TikTok accounts have the link in bio by default right now. If you’re one of the lucky ones, you’ll see a “Website” field after clicking “Edit Profile” on your TikTok profile page.\n\n\nIf you don’t have this option right now, you can still get your hands on a link in bio by joining the TikTok Testers program. Just follow these steps:\n\nStep #1: Go to your TikTok profile.\n\nStep #2: Tap the three dots in the top right corner.\n\nAdding a TikTok Link in Bio\nStep #3: Scroll down and select “Join TikTok Testers”.\n\nTikTok link in bio\nNOTE: Not all countries will have this option available.\n\nStep #4: Tap “TestFlight” and download it in the App Store.\n\nTikTok Link in Bio\nStep #5: Tap “Start Testing” and download the new version of TikTok.\n\n\nStep #6: Open up your TikTok profile again.\n\nStep #7: Tap “Edit Profile.”\n\nStep #8: Add your link under “Website.”\n\nTikTok Link in bio\nAnd there you go! You should now see a clickable link in your TikTok bio!\n\nNOTE: Some accounts may still not get the option to add a link to their profile, even after joining the TikTok Testers program. This could be due to your follower count, or the country you are in.\n\nJoin Our Free TikTok Challenge!\nWondering how to get started with TikTok? Sign up for our free 10-day challenge to learn how to start creating viral videos for your brand!\n\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n\nSIGN UP NOW\n\nBy entering your email, you’re opting-in to receive marketing and product updates from us. You can unsubscribe from these emails any time. Our Terms of Service and Privacy Policy have all the details.\n\n \n\nWhy Having a Clickable Link in Your TikTok Profile is a Game-changer For Brands:\nJust like adding a link in your Instagram bio, having a TikTok link in bio is a huge game-changer for brands and businesses using the viral app.\n\n\nTikTok already allows users to connect their YouTube and Instagram accounts to their profile, but the link in bio is a much more versatile way to drive users to your domains.\n\n\nIf your TikTok feed is filled with brand mentions and product features, it makes sense to provide a way for your audience to easily transition from content consumers to customers.\n\nFor example, Tarte Cosmetics uses their TikTok link in bio to drive sales.\n\nThey typically include a call to action in the captions of their beauty tutorial videos, which is a great way to encourage followers to visit your website and shop your products!\n\nTarte Cosmetics on TikTok\nWith the right strategy, TikTok’s link in bio can be a key part of your brand’s sales funnel, and it also provides an opportunity to grow your community outside of the platform.\n\nYou can drive traffic to your website, increase email newsletter or course sign-ups, or push out a certain product launch — the possibilities are endless.\n\nTake The Washington Post, for example. The news outlet has seen huge success on TikTok and the addition of the link in their profile is just another way they’re maximizing on their traffic.\n\n\nIn their profile bio, they direct users to tap the link to check out their latest article. The moment you tap the link, you are automatically brought to The Washington Post’s subscription page — a key part of their business model.\n\n\nOnce you’ve got your TikTok link in bio all set, you can start driving traffic and sales for your business.\n\nAnd the good news is, you can update it as often as you like!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/5.png",
        "date" : "July 24, 2020"
      },
      {
        "author" : "mlew",
        "title" : "How to Add Text to Your TikTok Videos",
        "content" : "Adding text to your TikTok videos is one of the best ways to create inclusive and engaging videos on the app.\n\nIn this blog post, we’ll walk you through how to use TikTok’s text editor, how to use on-screen text to tell a story,  and why it’s so important.\n\nReady? Let’s go!\n\n\nHow To Add Text Using The TikTok Text Editor\nThe TikTok text editor is simple and user-friendly. Once you begin adding text to your TikTok videos, your engagement and overall performance can skyrocket!\n\nStep #1: To start adding text, create a new TikTok by tapping the “+” button on the bottom of your feed. Either film a new video, open a draft or upload content from your camera roll.\n\nCreate your first tiktok\nStep #2: Edit and trim your video together. Once you’re happy with it, tap “Next”.\n\nStep #3: Tap “Text” on the bottom left.\n\nHow to Use TikTok Sounds\nStep #4: Use your keyboard to type something anywhere on the screen.\n\nHow to Use TikTok Sounds\nStep #5: Choose from a selection of fonts and styles and play around with the text size and location by pinching and moving the text on the screen.\n\nStep #6: Tap the text and select “Edit” and set the text duration by tapping “Duration”.\n\n\nOne of the most important parts of TikTok’s text editor is the ability to change the duration of how long your text appears on the screen. Setting text durations is a powerful way to use on-screen text to tell a story.\n\nTikTok Sounds\nUse the sliding scale to have your text appear or disappear at your desired time. If you have specific times for your text like matching it to the beat of the song, this step may take a little bit of time to get right.\n\nStep #7: To preview your text,  press the play button located just above the editing bar.\n\ntiktok sounds\nStep #8: When you’re happy with it, select the checkmark in the bottom-right corner of the screen to get your video ready to post.\n\nTikTok Text Editor: Fonts and Colors\nIn the text editor, you have the option to choose from a selection of fonts and colors.\n\nTo change fonts and colors, simply tap through the fonts and colors at the bottom of your screen. Just like on Instagram, tap the lines to play around with your text alignment.\n\nHow to Use TikTok Sounds\nOnce you’re happy with how it looks,  tap “Done” in the top-right corner.\n\nTIP: To make your text pop with the highlight,  tap the “A” on the left side of the screen and watch your text go bold.\n\n3 Benefits of Using Text on TikTok\nThere’s a lot of reasons why using text on your TikTok’s is important. To help you understand the way this tool can impact your content, we’ve broken down 3 benefits.\n\n#1: Inclusivity\nUsing text on your TikTok videos is a great way to be inclusive. Not only does adding TikTok video captions help those who may not have their sound on, but it also helps those who have hearing conditions.\n\nAccessibility is important in the digital world — especially for those with visual and hearing conditions.\n\nIt’s a simple and effective way to create a more inclusive and inviting TikTok profile. \n\n#2: Storytelling\nAdding text and setting custom durations can help you tell a story. And, many viewers actually watch videos without sound, so using text on your TikTok is an incredible way to catch your audience’s attention.\n\nNot sure how to do it? Take LaterCon speaker and TikTok Expert Sawyer Hartman’s advice.\n\n“First, I use the text to establish a problem or grab attention. I usually address people’s fears and concerns right off the bat. And then, step by step, I solve the problem,” explains Sawyer.\n\n\nRegardless of the video, the text on your video should always help tell a story.\n\n“Imagine your perfect viewer is sitting and watching your video with the sound off, what text can you put and what story can you tell that will convince them to turn their sound on?”\n\nLearn more TikTok tips from TikTok experts themselves in our free TikTok For Brands Workshop! \n\n\n\n#3: Higher Views and Engagement\nText is a great way to capture eyeballs and lead viewers to watch your whole video! When you include text that provides context — or even mystery — you’ll intrigue your audience.\n\nWhen viewers visit your TikTok profile, they will see all your TikTok video thumbnails. They may be more likely to press on the video if they see what it’s about.\n\nSee how Dr. Jordan Estrada uses text on his thumbnails to show his audience what each video is about.\n\n\nAnother way to use text to encourage engagement is by telling your audience to wait until the end of the video for a surprise — intriguing them to watch till the very end!\n\nCompletion rate and repeat viewership is a big indicator your content is performing well on TikTok and can land you a spot on the For You page when done right.\n\nTry it out and see how it works for your audience. If you’re not sure how your videos with text are performing, review your TikTok analytics. Check to see if there are any themes on your performance between TikToks with text and no text.\n\nNow that you’re an expert on TikTok’s text editor,  you’re able to utilize this text feature like a pro for your next video!\n\nHappy creating!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/1.png",
        "date" : "September 30, 2020"
      }
    ],
    "article" : [
      {
        "author" : "mlew",
        "title" : "How to Add Text to Your TikTok Videos",
        "content" : "Adding text to your TikTok videos is one of the best ways to create inclusive and engaging videos on the app.\n\nIn this blog post, we’ll walk you through how to use TikTok’s text editor, how to use on-screen text to tell a story,  and why it’s so important.\n\nReady? Let’s go!\n\n\nHow To Add Text Using The TikTok Text Editor\nThe TikTok text editor is simple and user-friendly. Once you begin adding text to your TikTok videos, your engagement and overall performance can skyrocket!\n\nStep #1: To start adding text, create a new TikTok by tapping the “+” button on the bottom of your feed. Either film a new video, open a draft or upload content from your camera roll.\n\nCreate your first tiktok\nStep #2: Edit and trim your video together. Once you’re happy with it, tap “Next”.\n\nStep #3: Tap “Text” on the bottom left.\n\nHow to Use TikTok Sounds\nStep #4: Use your keyboard to type something anywhere on the screen.\n\nHow to Use TikTok Sounds\nStep #5: Choose from a selection of fonts and styles and play around with the text size and location by pinching and moving the text on the screen.\n\nStep #6: Tap the text and select “Edit” and set the text duration by tapping “Duration”.\n\n\nOne of the most important parts of TikTok’s text editor is the ability to change the duration of how long your text appears on the screen. Setting text durations is a powerful way to use on-screen text to tell a story.\n\nTikTok Sounds\nUse the sliding scale to have your text appear or disappear at your desired time. If you have specific times for your text like matching it to the beat of the song, this step may take a little bit of time to get right.\n\nStep #7: To preview your text,  press the play button located just above the editing bar.\n\ntiktok sounds\nStep #8: When you’re happy with it, select the checkmark in the bottom-right corner of the screen to get your video ready to post.\n\nTikTok Text Editor: Fonts and Colors\nIn the text editor, you have the option to choose from a selection of fonts and colors.\n\nTo change fonts and colors, simply tap through the fonts and colors at the bottom of your screen. Just like on Instagram, tap the lines to play around with your text alignment.\n\nHow to Use TikTok Sounds\nOnce you’re happy with how it looks,  tap “Done” in the top-right corner.\n\nTIP: To make your text pop with the highlight,  tap the “A” on the left side of the screen and watch your text go bold.\n\n3 Benefits of Using Text on TikTok\nThere’s a lot of reasons why using text on your TikTok’s is important. To help you understand the way this tool can impact your content, we’ve broken down 3 benefits.\n\n#1: Inclusivity\nUsing text on your TikTok videos is a great way to be inclusive. Not only does adding TikTok video captions help those who may not have their sound on, but it also helps those who have hearing conditions.\n\nAccessibility is important in the digital world — especially for those with visual and hearing conditions.\n\nIt’s a simple and effective way to create a more inclusive and inviting TikTok profile. \n\n#2: Storytelling\nAdding text and setting custom durations can help you tell a story. And, many viewers actually watch videos without sound, so using text on your TikTok is an incredible way to catch your audience’s attention.\n\nNot sure how to do it? Take LaterCon speaker and TikTok Expert Sawyer Hartman’s advice.\n\n“First, I use the text to establish a problem or grab attention. I usually address people’s fears and concerns right off the bat. And then, step by step, I solve the problem,” explains Sawyer.\n\n\nRegardless of the video, the text on your video should always help tell a story.\n\n“Imagine your perfect viewer is sitting and watching your video with the sound off, what text can you put and what story can you tell that will convince them to turn their sound on?”\n\nLearn more TikTok tips from TikTok experts themselves in our free TikTok For Brands Workshop! \n\n\n\n#3: Higher Views and Engagement\nText is a great way to capture eyeballs and lead viewers to watch your whole video! When you include text that provides context — or even mystery — you’ll intrigue your audience.\n\nWhen viewers visit your TikTok profile, they will see all your TikTok video thumbnails. They may be more likely to press on the video if they see what it’s about.\n\nSee how Dr. Jordan Estrada uses text on his thumbnails to show his audience what each video is about.\n\n\nAnother way to use text to encourage engagement is by telling your audience to wait until the end of the video for a surprise — intriguing them to watch till the very end!\n\nCompletion rate and repeat viewership is a big indicator your content is performing well on TikTok and can land you a spot on the For You page when done right.\n\nTry it out and see how it works for your audience. If you’re not sure how your videos with text are performing, review your TikTok analytics. Check to see if there are any themes on your performance between TikToks with text and no text.\n\nNow that you’re an expert on TikTok’s text editor,  you’re able to utilize this text feature like a pro for your next video!\n\nHappy creating!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/1.png",
        "date" : "September 30, 2020"
      },
      {
        "author" : "mlew",
        "title" : "How To Use TikTok Sounds",
        "content" : "Music, popularly known as TikTok Sounds, is key to the viral app. Not only do Sounds help with creativity,  but they’re also a strategic growth tool.\n\nUnderstanding and using TikTok’s sounds is a great way to help your business or brand grow.\n\nReady to learn everything about TikTok Sounds? Follow along!\n\n\nWhat Are TikTok “Sounds”?\nTikTok Sounds (including Original Audio) is the backbone of TikTok.\n\nIf you’ve had a scroll on the TikTok For You Page, you’ve likely noticed a pattern. Every single video either uses Sounds or Original Audio. And, in most cases, several videos during your scroll will actually have the same song! That most likely means it’s either trending or viral.\n\nTikTok Sounds are powerful — using Trending Sounds or creating a great Original Audio track is a huge opportunity to push your content to a larger audience. And hey — you may even go viral!\n\nMusical artists have actually made fortunes after going viral on TikTok thanks to the platform’s ability to showcase the artist who made the sound. Did you know Lil Nas x’s Old Town Road started on TikTok?\n\nNot only have musical artists created viral Sounds, but so have brands, businesses, and creators.\n\nHow to Navigate TikTok Sounds\n\nUsing Trending Sounds (and all Sounds) on TikTok helps bring your content to the next level. From Keeping Up with the Kardashians audio clips to trending songs, you can find whatever you want in the Sounds Library.\n\nWhen you open up TikTok and begin scrolling the FYP, you’ll notice how every single video is accompanied by a song — whether original audio or from the TikTok Sounds Library.\n\nThere are several ways you can choose a TikTok sound for your video. You can browse the TikTok Sounds Library, save songs used by other users, or create your own.\n\nWe’re breaking it all down for you below.\n\nTikTok Sounds Library\nThe TikTok Sounds library is where the magic happens. It’s where you can search and browse all of TikTok’s music library.\n\n\nIt’s everchanging and very user-friendly — organized by genre, popularity, trends, and much more! Access the Sounds Library by tapping the “+” of the home screen and tapping “Sounds” at the top.\n\nYour Ultimate Guide To Sounds on TikTok \nYou can also search for Sounds on TikTok’s Discover Page. Simply type the song into the search bar and find “Sounds” at the top.\n\nEverything You Need To Know About TikTok Sounds\nTrending songs are always changing and are based on the TikTok algorithm. It’s based on TikTok users’ behavior, video shares, saves, and of course, plays.\n\nTrending Sounds are a great way to maximize visibility on your video — increasing your chances of landing on the For You page.\n\n\nTikTok For You Page\nAs you’re scrolling through your For You page, you might stumble upon a video using the perfect song.\n\nWhen you find a song you want to use, simply tap on the sound. You’ll be brought to the audio page. Here you can either tap “Use this sound” to film right away or tap “Add to Favorites” to save for later.\n\nHow to create your first tiktok\nHow To Add Sounds To Your TikTok Videos\nNow that you know where to find Sounds on TikTok, it’s time to learn how to actually add Sounds to your TikTok video.\n\nAdding TikTok Sounds To Existing Videos\nIf you’re creating a TikTok using content from your camera roll, you can either upload the video with its own audio or you can add a Sound from TikTok’s Sound Library.\n\nTo begin, tap “+”. Upload your content and then tap “Sounds” in the bottom left corner.\n\nHow To Use TikTok’s Sounds Library\nHere is where you’ll see recommended songs and sounds based on your video—including some curated trending options.\n\nScroll through to explore the entire Sounds library. You can choose from playlists, trending, and viral songs, new music, and so much more. If you want to use a song from your Favorites, tap “Favorites”.\n\nEverything You Need To Know About TikTok Sounds\nOnce you’ve selected your song, click and drag the soundwaves to choose which part of the song you want to play in your video.\n\nOnce you’ve landed where you want your Sound to start, tap the checkmark.\n\nWhen you Create your TikTok — before you get into the Sounds library — you’ll notice a few recommended sounds at the bottom of your screen for you to seamlessly use without much effort. These sounds are TikTok’s suggestions for you, based on the video you’re editing.\n\nAre you ready to create your first TikTok? Learn everything you need to know to make your first video here.\n\nAdding to TikTok Sounds to New Videos\nAdding music when you’re shooting content in TikTok allows the music to guide you and your creativity in real-time.\n\nStep #1: Tap “+” to start shooting\n\nStep #2: Select “Sounds” at the top of your screen.\n\nWhat is TikTok\nStep #3: Browse the sound library then tap the sound and select it.\n\nStep #4: Record your video and your chosen sound will play as you film.\n\nYour Ultimate Guide To Sounds on TikTok\nFREE COURSE!\nHow to Use TikTok for Business\nLearn how your brand can create perfectly optimized TikTok content and start creating viral videos.\n\nWATCH NOW\n\n \n\nHow to Create Original TikTok Sounds\nOriginal Sounds range from people singing and creating voiceovers to creating music mashups and viral commentary.\n\nThe great thing about Original Sounds? They can show up in trending and recommended categories. And, more often than not, Original Sounds are often made by independent creators rather than major artists! This is a huge growth opportunity.\n\nTake the viral hit “Bored in the House” by @curtisroach for example.\n\n\nOne important thing to remember is that anything you record on TikTok can be used as a sound used by someone else. When a song is recorded on TikTok, it becomes an Original Track — meaning no sounds were used other than your own voice.\n\nTake Lad Bible’s own “Darude Soapstorm” aka DIY Sandstorm for example. This sound was uploaded natively and now features over 400 videos using this same sound from a number of creators.\n\nTo create your own original audio, you can either talk while you film in-app or you can record a voiceover after filming. Learn how to record a voiceover here.\n\nIf you upload a video from your camera roll, the audio from that video will play. You can adjust the audio by tapping “Volume” on the right-hand side.\n\nHow To Use TikTok’s Sounds Library\nTIP: If you’ve created an Original Sound, take a look at your Sound by tapping the bottom right audio to see if anyone else has used it to create a video. You never know what you’ll find.\n\nNow that you know everything about TikTok sounds, it’s time to explore and use these tools to further (and enhance) your TikTok marketing strategy.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/2.png",
        "date" : "September 30, 2020"
      },
      {
        "author" : "jessica",
        "title" : "How to use Stitch: TikTok’s New Editing Feature",
        "content" : "Introducing TikTok’s newest video editing feature — Stitch.\n\nStitch on TikTok allows users to trim and edit other users’ video clips into their own. It’s a new way to collaborate with more creators, grow your reach, and possibly gain virality!\n\nReady to dive into the details? We’re sharing everything we know about Stitch on TikTok here:\n\n\nWhat is Stitch on TikTok?\nStitch is TikTok’s newest video editing feature that allows users to integrate other users’ video clips into their own.\n\nstitch on tiktok\nWhile it is a new feature, it’s not totally off base with TikTok’s Duet tool. The Duet tool, which is popular amongst creators, allows users to create reaction videos in a split-screen.\n\nWith Stitch, instead of the split-screen format, the videos are integrated into each other. Both the original and new videos are cut and edited together into one video.\n\n\nAccording to TikTok, “Stitch is a way to reinterpret and add to another user’s content, building on their stories, tutorials, recipes, math lessons, and more.”\n\nEven though Stitch is new, many creators are already flexing their creative muscle and testing out the new feature.\n\n\nICYMI: TikTok has also introduced a new Marketing Partner Program for advertisers: TikTok For Business Marketing Partner Program.\n\nWith 20 certified partners in areas like campaign management and creative development, TikTok is working with the best in the biz to help marketers bring their content to the next level. \n\nAccording to TikTok, “brands and marketers can now tap into our trusted ecosystem of partners including agencies and technology providers who can help them build successful campaigns and take advertising on TikTok to the next level.”\n\nLearn more about TikTok’s Marketing Partner Program here.\n\nHow to Turn Stitch On and Off \nBy enabling the Stitch tool, you are opening your content up to millions of potential collaborations. Think about the possibilities — it can be an incredible way to increase reach and gain virality.\n\nIf you aren’t comfortable opening up your videos to all of TikTok, users have the ability to choose whether they want to allow others to Stitch their content. \n\nThere are 2 ways to do this. You can change them in Privacy Settings and before you share each individual video.\n\nHere is how to change Stitch settings:\n\nStep #1: Head to your profile and tap the three dots in the top right corner.\n\nstitch on tiktok\nStep #2: Tap “Privacy”\n\nstitch on tiktok\nStep #3: Tap “Who can Stitch with your videos”\n\nstitch on tiktok\nStep #4: Select “Everyone,” “Friends,” or “No one.” Tap the back arrow to save.\n\nstich on tiktok\nBut that’s not all. Even with the overall settings in place, you can still individually change the Stitch settings for each video you upload. \n\nDo this by switching the “Allow Stitch” on\/off toggle before you tap “Share.”\n\nstich on tiktok\nWhen you Stitch a video, TikTok automatically gives proper credit to the original creator in the new video caption. Not only does it give credit, but it also links directly to the original video.\n\nstich on tiktok\nPlus, users can’t erase the hashtag and profile tag in the video caption — ensuring all creators are given the proper attribution!\n\n\nHow to Create a Video Using Stitch\nThe new video feature is simple to use — you’ll be creating Stitch videos in no time.\n\nstich on tiktok\nFollow these steps to get started:\n\nStep #1: Find and select the video you’d like to Stitch.\n\nStep #2: Tap the send arrow on the right-hand side of the screen.\n\nstich on tiktok\nStep #3: Select “Stitch”\n\nstich on tiktok\nNote: If “Stitch” is faded, that means the original creator has denied Stitch access.\n\nstich on tiktok\nStep #4: Scroll through the video and select a clip. You can trim the clip how you like but you can only select up to five seconds from the video. Press “Next.”\n\nstich on tiktok\nStep #5: Once you’ve selected the clip, record your section of the video.\n\nWhile recording, the red at the top represents the original video and the blue represents what you’ve recorded.\n\nWhen you record your section, you can use a selection of TikTok’s typical editing tools. You can use the timer, change the speed, and add effects and filters.\n\nTwo main editing differences for Stitch videos? You aren’t able to upload content from your camera roll and you don’t have access to the TikTok Sound library.\n\nStep #6: Now you are at the final editing stage. Record a voiceover, add text, stickers, filters, or effects. When you’re happy with the finished product, tap “Next.”\n\nStep #7: Write a caption and choose your video settings. If you’re ready to post, tap “Share”.\n\nAnd there you have it! Everything you need to know about TikTok’s newest video editing feature.  \n\nWill you be using Stich on TikTok? Let us know what you think of the new feature in the comments!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/3.png",
        "date" : "September 9, 2020"
      },
      {
        "author" : "mlew",
        "title" : "How To Create Your First TikTok",
        "content" : "Are you ready to get started on TikTok?  You’ve come to the right place.\n\nIn this step-by-step guide, we break down everything you need to know to get started on TikTok and create your very first video — everything from how to set up your account to how to use all of TikTok’s editing tools.\n\nLet’s get started!\n\n\nTable of Contents:\n\nSet Up Your TikTok Account\nFilm and Upload Your Content\nEdit Your Video (In the App!)\nPublish Your TikTok\nGet Started on TikTok Step #1: Set Up Your TikTok Account\nBefore you can browse the famous For You page or post, you’ll have to create a TikTok account.\n\nFirst, go to the App Store or Google Play and download the TikTok app. Once downloaded, sign up with Facebook, Gmail, or Twitter, or create a new username and password using your email.\n\nCreate your first tiktok\nBy default, TikTok assigns all users a unique username made up of a random collection of letters and numbers. It’s not super cute, so let’s change that!\n\nFor best practice — and maximum cross-platform discoverability — set your username to your name or your business name, or whatever username you use for your other channels! This helps create a seamless extension of your already established brand.\n\nTikTok username\nTIP: Looking to do something different? Be creative by working with puns, punctuation, and more!\n\nOnce logged in, you’ll be brought to the homepage.\n\nIt’s time to edit your profile! To edit, tap “Me” in the bottom right corner.\n\n\n Tap “Edit Profile”.\n\ntiktok edit profile\nFirst, let’s change our TikTok profile picture. TikTok allows you to choose between a static image or a video.\n\ntiktok profile picture\nIt’s a good idea to align your profile picture, just like your username, with the picture you use across other social channels.\n\nYour profile picture isn’t the only important piece of the TikTok profile puzzle.\n\nNext, it’s time to write your TikTok bio.\n\ntiktok bio\nYour TikTok bio is important —  it’s one of the first places your audience will look. TikTok allows up to 80 characters, allowing you to share a short and sweet bio at the forefront of your profile.\n\nAdd a tiktok bio\nNot sure what to write for your bio? Here are 25 creative Instagram bio examples you’ll definitely want to copy!\n\nIf you’re one of the lucky ones, you’ll notice a “website” field in your edit settings.\n\n\nHowever, only certain TikTok accounts can capitalize on the TikTok link in bio by default right now.\nThe TikTok link in bio (website field), is one of the few places where you can add a clickable link on the app, making it a valuable resource for brands looking to drive traffic and sales.\n\nCheck out this blog post for a step-by-step on how to add a link to your TikTok bio.\n\nTikTok also allows for seamless YouTube and Instagram integration. It’s a good idea to input your Instagram and YouTube accounts so that your audience can follow you outside of TikTok.\n\n\nThey’ll be showcased on your profile next to the follow button.\n\n\nNow that your profile is all set up, it’s time to follow users and engage in content!\n\nOn TikTok, you don’t necessarily have to follow accounts to see their content. Most content appears on your personalized For You page.\n\nFollowing accounts and engaging with content lets TikTok know what you’re interested in and helps TikTok’s algorithm create a personalized For You page.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/4.png",
        "date" : "September 4, 2020"
      },
      {
        "author" : "jessica",
        "title" : "How to Add a Link to Your TikTok Bio (+ Why Your Brand Needs It!)",
        "content" : "The TikTok link in bio rollout is on its way — and it’s going to be a game-changer for brands and businesses on the app!\n\nTikTok users will be able to take advantage of the prime real estate on their TikTok profile to direct their followers outside of the app.\n\nWe’re jumping into all the benefits, details, and everything you need to know about how to get a clickable link in your TikTok bio:\n\n\nTikTok Link in Bio: How to Get a Clickable Link on Your Profile\nTikTok is testing out a new feature — the link in bio on TikTok. While still in beta-testing, many users can start to take advantage of the new social commerce feature.\n\nLike on Instagram, it will allow users to add a bolded clickable link directly on their profile.\n\nTikTok Link in Bio\nThis is huge for brands, influencers, and businesses of all sizes on TikTok, as it’s the main way to drive followers to a website or e-commerce platform.\n\nReady to add a TikTok link in bio to your profile? Here’s how:\n\nStep #1: Go to your TikTok Profile.\n\nOnly certain TikTok accounts have the link in bio by default right now. If you’re one of the lucky ones, you’ll see a “Website” field after clicking “Edit Profile” on your TikTok profile page.\n\n\nIf you don’t have this option right now, you can still get your hands on a link in bio by joining the TikTok Testers program. Just follow these steps:\n\nStep #1: Go to your TikTok profile.\n\nStep #2: Tap the three dots in the top right corner.\n\nAdding a TikTok Link in Bio\nStep #3: Scroll down and select “Join TikTok Testers”.\n\nTikTok link in bio\nNOTE: Not all countries will have this option available.\n\nStep #4: Tap “TestFlight” and download it in the App Store.\n\nTikTok Link in Bio\nStep #5: Tap “Start Testing” and download the new version of TikTok.\n\n\nStep #6: Open up your TikTok profile again.\n\nStep #7: Tap “Edit Profile.”\n\nStep #8: Add your link under “Website.”\n\nTikTok Link in bio\nAnd there you go! You should now see a clickable link in your TikTok bio!\n\nNOTE: Some accounts may still not get the option to add a link to their profile, even after joining the TikTok Testers program. This could be due to your follower count, or the country you are in.\n\nJoin Our Free TikTok Challenge!\nWondering how to get started with TikTok? Sign up for our free 10-day challenge to learn how to start creating viral videos for your brand!\n\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n\nSIGN UP NOW\n\nBy entering your email, you’re opting-in to receive marketing and product updates from us. You can unsubscribe from these emails any time. Our Terms of Service and Privacy Policy have all the details.\n\n \n\nWhy Having a Clickable Link in Your TikTok Profile is a Game-changer For Brands:\nJust like adding a link in your Instagram bio, having a TikTok link in bio is a huge game-changer for brands and businesses using the viral app.\n\n\nTikTok already allows users to connect their YouTube and Instagram accounts to their profile, but the link in bio is a much more versatile way to drive users to your domains.\n\n\nIf your TikTok feed is filled with brand mentions and product features, it makes sense to provide a way for your audience to easily transition from content consumers to customers.\n\nFor example, Tarte Cosmetics uses their TikTok link in bio to drive sales.\n\nThey typically include a call to action in the captions of their beauty tutorial videos, which is a great way to encourage followers to visit your website and shop your products!\n\nTarte Cosmetics on TikTok\nWith the right strategy, TikTok’s link in bio can be a key part of your brand’s sales funnel, and it also provides an opportunity to grow your community outside of the platform.\n\nYou can drive traffic to your website, increase email newsletter or course sign-ups, or push out a certain product launch — the possibilities are endless.\n\nTake The Washington Post, for example. The news outlet has seen huge success on TikTok and the addition of the link in their profile is just another way they’re maximizing on their traffic.\n\n\nIn their profile bio, they direct users to tap the link to check out their latest article. The moment you tap the link, you are automatically brought to The Washington Post’s subscription page — a key part of their business model.\n\n\nOnce you’ve got your TikTok link in bio all set, you can start driving traffic and sales for your business.\n\nAnd the good news is, you can update it as often as you like!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/5.png",
        "date" : "July 24, 2020"
      },
      {
        "author" : "mlew",
        "title" : "This is How the TikTok Algorithm Works",
        "content" : "The TikTok algorithm may seem complex and mysterious — but TikTok has (finally!) revealed exactly how it works!\n\nFrom what hashtags you use, to your location, music choices, and even the very first TikTok video you liked — they can all influence the TikTok algorithm.\n\nWhich is some serious intel for brands and businesses looking to get more engagement on their TikTok content.\n\nIn this blog post, we’re sharing everything we know about the TikTok algorithm and how you can start using it your advantage:\n\n\nHow the TikTok Algorithm Works (According to TikTok Themselves!) \nTikTok has finally lifted the veil on how the algorithm works, putting an end to months of rumors and speculation.\n\nIn a recent press statement, TikTok shared exactly how the #ForYou feed is calibrated and personalized to each account.\n\nSo before we jump into the nitty-gritty details of the TikTok algorithm, here’s what we know to be true — straight from TikTok HQ!\n\nWhat Factors Contribute to TikTok’s For You Page Video Suggestions?\nIf you’ve scrolled TikTok, you’ll know that the For You page is the best place to go to find the best new content.\n\nPreviously, we could only make assumptions that the For You page appeared to be a curated feed, pulling videos that are related to your profile, location, and similar to videos you’ve already liked and engaged with.\n\n\nBut now, we have some concrete facts from TikTok on how the For You page reflects preferences unique to each user.\n\nAccording to TikTok: “The system recommends content by ranking videos based on a combination of factors — starting from interests you express as a new user and adjusting for things you indicate you’re not interested in, too”.\n\nThese factors include things like:\n\nUser interactions: such as the videos you like or share, accounts you follow, comments you post, and content you create.\nVideo information: this might include details like captions, sounds, and hashtags.\nDevice and account settings: like your language preference, country setting, and device type.\nAnd it doesn’t stop there.\n\nEach of these factors is individually weighted by the TikTok’s For You recommendation system, meaning that each For You page will be completely unique to a user and their level of interest.\n\nFor example, TikTok explains that a strong indicator of interest could be if a user finishes watching a longer video from beginning to end.\n\nThis would receive greater weight than a weak indicator, such as whether the video’s viewer and creator are both in the same country.\n\nFrom these “indicators of interest,” For You page videos are then ranked based on the likelihood of a user’s interest in a piece of content.\n\nBut what about the age-old question of “do I need thousands of followers to go viral?”. In short, the answer is no.\n\nTikTok explained that while a video is likely to receive more views if posted by an account that has more followers (by virtue of having a larger follower base), “neither follower count nor whether the account has had previous high-performing videos are direct factors in the recommendation system.” \n\nCheck out @kei.honey‘s viral post below. With just over 40K followers, Kei’s educational video to support the Black Lives Matter movement gained over 1.2M views and 360K likes (at the time of publishing this blog post).\n\n\nSo even if you have zero followers, and have never posted to TikTok before, there’s still an opportunity for your video to appear in the For You page of other users!\n\nReady to take your TikTok strategy up a notch? Watch our free 30-minute video on how to use TikTok to grow your brand!\n\n\n\nHow to Personalize Your For You Page: \nNow we know how TikTok decides what appears on your For You page, we can explore how to personalize it!\n\nTikTok is an app for discovery —  so even if you only follow 5 accounts, you can still spend hours scrolling through videos (trust us, it can happened!).\n\nSo to help you get the most out of your TikTok profile, you can take some action to make sure your For You page is always delivering content that you’re interested in.\n\nHere’s some tips from TikTok on how to personalize your For You page: \n\n#1: Getting Started on TikTok with Category Selection \nWhen you first set up a TikTok account, you’ll be prompted to select categories that interest you — like pets, travel, beauty, sports, etc.\n\nTikTok uses this information to tailor the recommendation in your initial For You page feed — as at this stage, you’ve probably not liked, followed, or engaged with any videos yet. TikTok relies on the categories you’ve selected to put the first version of your For You page feed together.\n\nIf you don’t select categories, TikTok will start by offering you a generalized feed of popular videos to get the ball rolling.\n\nFrom here, TikTok starts to learn more about your interests and preferences based on your likes, comments, and replays.\n\nSo if you’re brand new to TikTok, it’s worth selecting relevant categories and engaging with the content that you actually enjoy — so the algorithm can learn exactly what type of content you want to see.\n\n#2: Find More of What You’re Interested in\nThe TikTok algorithm learns from every single action you take on the app.\n\nSo the best way to curate your For You page feed is to use and enjoy TikTok. Over time, you’ll see your feed becoming more relevant to your interests.\n\nAnd according to TikTok, your feed isn’t only shaped by your engagement on the For You page feed itself.\n\n“When you decide to follow new accounts, for example, that action will help refine your recommendations too, as will exploring hashtags, sounds, effects, and trending topics on the Discover tab.”\n\nHow to Be Successful on TikTok\nUsing all of TikTok’s features will tailor your experience and determine what content makes it into your feed!\n\n#3: Tell TikTok What You’re Not Interested in \nThere’s a space on TikTok for everyone, but everyone has their own preferences of what they’d like to see and engage with on the app.\n\nThink of it like your Netflix recommendations, some series might not be for you, but they still deserve their place.\n\nIf you come across something that’s not quite to your liking, you can simply long-press on a video and tap “Not Interested” to indicate that you don’t care for a particular video.\n\n\nYou can also choose to hide videos from a given creator or made with a certain sound, or report a video that seems out of line with TikTok’s guidelines.\n\nAll these actions contribute to future recommendations in your For You page feed, helping to create a perfectly personalized feed!\n\nHow to Use the TikTok Algorithm to Get Your Content on the For You Page: \nIf you’re a brand, business, or creator on TikTok, the chances are you’d like to get more views, likes, and comments on your content.\n\nAfter all, the more eyes on your videos, the more opportunity you have to engage with your TikTok audience and show off your brand.\n\nAnd the key to getting more engagement on your videos is working with the TikTok algorithm to get your content on as many For You page feeds as possible.\n\n\nBut trust us, getting a coveted spot on a For You page takes a lot more than just adding #fyp to your caption.\n\nTo help you create the best content, and get more limelight on the TikTok feed, we’re going to jump into the top 6 factors that influence the TikTok algorithm!\n\nFrom nailing your hashtag strategy to choosing trending songs and sounds, we’re covering everything you need to know to hack the TikTok algorithm:\n\nTikTok Algorithm Factor #1 : Hashtags\nAs we mentioned above, the For You page is where users aim to land in order to hit the TikTok lottery.\n\nYou’re likely to see the following hashtags on content such as #Foryou, #ForYouPage, and #FYP. But based on TikTok’s statement on the algorithm, tapping on one of these hashtags doesn’t guarantee you a spot on the For You page.\n\n@jasonderulo\nI can’t believe @addisonre can moonwalk so good 🤯\n##fyp\n##foryoupage\n♬ #hiteverybeat – lulbabyynelii\nKnowing exactly what hashtag is best in terms of optimizing your content for the FYP is still relatively mysterious. Vice highlights that if posts include at least one of these #fyp, #foryou, or #foryoupage hashtags in their captions, their posts are more likely to surface on more For You pages.\n\nAlong with the #FYP tactic, we’ve seen people utilize the trending hashtag feature to tap into what’s gaining momentum in real-time.\n\nEverything You Need To Know About TikTok’s Algorithm \nBy tapping the Discover Tab, you can find trending hashtags, as well as typing them out if you want to check a hashtag’s performance.\n\nLooking for the ones that are getting a lot of traction right now? Just look for the fire icons next to the hashtags and think about incorporating that hashtag into your captain, if the content aligns.\n\n\nTikTok lets its users know how many views each hashtag gains. And while these numbers can look intimidating — especially if they’re in the millions — they’re also proving this content is favored.\n\nIt almost provides a “creative brief” for users to tap into, such as the latest #albumlookalike challenge, #jamsessions, and #learnfromme hashtags, all prioritized by TikTok.\n\nTIP: Research what hashtags are trending right now and see if your brand can create content to take part!\n\nBut be cautious — jumping on a hashtag just because it’s trending may seem like a good idea, but if the hashtag is completely unrelated to the content in your video, it could backfire!\n\nSo always find relatable hashtags that will help people discover your content and inform the TikTok algorithm what your video and your profile is all about!\n\nWant to learn more about TikTok hashtags? We jump into the details in this blog post! \n\nTikTok Algorithm Factor #2: TikTok Captions\nUnlike the trend of long captions on Instagram and Facebook, TikTok is not the platform to share an essay.\n\nThe ideal caption for TikTok should be short, feature hashtags relating back to the content, and be digestible (and complimentary) to the content you’re sharing.\n\nTikTok is a mobile-first video platform, so keeping copy short and quippy tends to bring better results.\n\nEverything You Need To Know About TikTok’s Algorithm \nTIP: Want to make your copy most engaging? Consider asking a question, using a joke, or making the copy a little mysterious or something you need to “wait for.”\n\n This Is The TikTok Algorithm, Explained\nThese themes tend to perform well, especially for influencers on the platform.\n\nWhen it comes to boosting engagement, being able to start and lead a conversation in your comments really pays off. Your video’s top comments will have a prime spot at the top of your comments list, which means you could spark even more conversation as people will notice the comments on your video as they scroll through TikTok.\n\n This Is The TikTok Algorithm, Explained\nTikTok Algorithm Factor #3: Trending Songs & Sounds\nLike hashtags, TikTok’s music and sounds play a major part in your content’s discoverability.\n\nThe good news is that using a trending song at the right time can mean a quick bump in likes and views.\n\nBut unlike TikTok’s Discover tab, TikTok’s Sounds are not as easily accessible as a tap of a tab. Unless you’re actively consuming video or creating one yourself within the app, you need to be a little more stealth in finding what music and sounds are getting the most traction.\n\nHere’s how you can find trending music (and save music for later):\n\n#1: Sounds in Video Editor\nTo find new, trending, and popular sounds on TikTok, you’ll need to go into TikTok’s video editor.\n\nPress the plus icon at the bottom of the screen.\n\n This Is The TikTok Algorithm, Explained\nDon’t worry, you don’t have to actually film anything to see what’s hot! Tap “Sounds” at the top of the screen.\n\n This Is The TikTok Algorithm, Explained\nNow you can have fun and scroll through what’s trending!\n\n\nIt’s an awesome hub to find new stuff and make sure you’re on the pulse of what sounds people are using! This hub is also where your favorites list lives (more on that below!).\n\n#2: Favorites\nWhen you’re on TikTok, keep an ear out for sounds you like! Similar to “Saves” on Instagram, favoriting a sound collects it for you in one handy spot.\n\nIf you like a sound and want to use it in the future, tap on the sound under the username and tap “Add to Favorites”. The Favorites tab is an awesome tool to keep all your favs in one place — it’ll come in handy when you need it most!Gaining More Followers on TikTok: The Basics\n#3: Sounds Your Followers Listened to\nOne of the best-kept secrets of the TikTok app is hidden in the Analytics tab of TikTok Pro accounts.\n\nUnder the Followers tab, scroll down to find the top sounds your audience has listened to over the last 7 days — making it a shortlist of music you could use for your next video!TikTok\nTikTok Algorithm Factor #4: When Your Audience is Most Active \nPosting content when your audience is most active is a sure way to get your content seen. And, thanks to TikTok’s Pro Accounts, you can tap into some juicy audience analytics.\n\n\nTikTok analytics may not be as in-depth as Instagram analytics, but don’t be fooled! TikTok gives you a ton of useful information to help you gain a better understanding of your personal best time to post.\n\nTikTok_Audience\nKnowing when your audience is live is a great starting point. To help you find your personalized best time to post on TikTok for your brand and business, we’re covering everything you need to know in this blog post.\n\nWhy Some Videos are Instant Hits (and Others are Slow Burners!)\nMany people have seen or heard of the “slow burn” phenomenon on TikTok — when something is posted, barely gets engagement or reach, and then suddenly pops off on TikTok.\n\nThis timing could be 48-hours after posting or up to weeks later, there seems to be no rhyme or reason to it!\n\nFor now, we can assume that while videos slowly gain likes, comments, and views, the TikTok algorithm may push your video onto the For You page, even if it’s not a brand new video.\n\nOr, a sound could suddenly get a lot of exposure, based on someone else’s video going viral, and your video that features the same sounds could get a little bump!\n\nSo it’s worth keeping in mind that even though you might not get an initial huge reaction, it’s worth waiting and keeping an eye on your video for weeks, and even months after you’ve posted.\n\nTikTok Algorithm Factor #5: Video Content & Editing \nThere’s no denying that TikTok’s video style is unique — there’s nothing off-bounds! It’s a place where creativity flows and you can represent your brand any way you like.\n\nThat said, if you’ve covered your bases with the perfect song, the ideal caption, and the timing of your post, but don’t have a strong video to share it with, does the content still perform? This is perhaps still the biggest unknown of the TikTok algorithm.\n\nOne theory is that TikToks with a seamless loop can potentially be a trigger for the algorithm.\n\n@lifewitherick\nlegends say this video only loads if you have a fast Internet 🌚\n##perfectloop\n##foryoupage\n♬ Perfect Loop – lifewitherick\nIt’s worth thinking about videos you’ve watched 3 times in a row, or clips you just keep coming back to — these are the ones that really grab audience attention and the algorithm could reward you for it!\n\nThis is something TikTok is very likely monitoring, serving more of the content all users are gravitating towards. It could be machine learning over personal preference that determines whether a video goes viral or not.\n\nOnce you have a good video concept, it’s worth spending some time editing your TikTok video to make the format even more engaging for viewers.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/6.png",
        "date" : "June 18, 2020"
      },
      {
        "author" : "kocherty",
        "title" : "Why TikTok’s Feel-good Content is Trending Right Now",
        "content" : "Feel-good content is filling up For You pages on TikTok and we’re loving it! But how can brands get involved in creating satisfyingly “too-good-to-watch-once” videos on the viral app?\n\nWe chatted with Kelsey Docherty, TikTok brand consultant, aficionado, and video content pro to share her insights on the latest funny, satisfying, and all-around joyful trends we’re seeing on the app this week\n\nStemming from Kelsey’s trend-watch series, TikTok Thursdays on Instagram, we’re going to check out what kind of content is making people smile and dive into how easy it is for your brand to try them out.\n\nWhy TikTok's Feel-good Content is Trending Right Now\nTikTok Trends Overview of the Week\nAs we learned last week, trending TikTok content is a reflection of current events, social movements, and generally speaking, what is going on in the world.\n\nThankfully, educational content is still trending, which is what we like to see on TikTok! Make sure to visit the trending hashtag #IndigenousPeoplesDay to learn important information and celebrate the incredible heritage and cultures of First Nations, Inuit, and Metis people.\n\nCheck out videos that detail why braids are so significant and suggestions of books to read by Indigenous authors.\n\n\nBut one new trend we’ve spotted in our feeds is the surge of feel-good and joyful content. Rooted in the simple pleasures, we’ve seen trending hashtags like #YogaFlow, #RollerSkating, #PlantLover, and #SelfCareRoutine.\n\n\nIt’s a great time to showcase a more personal, or behind-the-scenes look at your brand.\n\nThink about a video demonstrating how your employees are practicing self-care during lockdown, or try out a team-building virtual yoga class for some team bonding.\n\nGot an four-legged and fluffy colleague? Now’s the time to introduce them to your TikTok audience.\n\n\nThe best thing about this trend is that there are no rules. If you feel good about creating it and sharing it with you audience — chances are your audience is going to agree!\n\nTikTok Trend of the Week\nThere is something to be said for “satisfyingly good” content on TikTok.\n\nLast week, I had a video of a man throwing a giant rock into a pile of mud. It has over a million likes. Was it one of the most perplexing videos that popped up on my For You Page? Yes. Do I know why it garnered so much attention? Also yes.\n\nIt’s because satisfying content on TikTok is fun to watch. It’s why slime was such a big YouTube and Instagram trend for so long!\n\nLet’s take a look at @stickyaustralia. They’re a candy artisan shop based out of Sydney, Australia. Their videos are simply clips of them making hard candy and I can’t stop watching them!\n\n\nSee what I mean!?\n\nAnother brand that does satisfying content so well is LanoLips (coincidentally, also Australian!). They are a beauty brand that specializes in hydrating creams and balms for dry skin.\n\nFrom a brand standpoint, they’ve got a slight advantage because their product is organically satisfying to watch. Let’s take a look:\n\n\nFor your next TikTok post, try to see how you could incorporate some type of satisfying content — beautiful handwriting, the perfect coffee pour, and even vegetables sliced to perfection are all getting a space on the For You page.\n\nIf you’re stuck on visuals, think about ways to include satisfying audio into the mix (ASMR anyone!?). Take a look at how HypeBeast does it here:\n\n\nSign up for Later’s 10 Day TikTok Challenge and learn how to create perfectly optimized videos on the newest social sharing platform!\n\nJoin Our Free TikTok Challenge!\nWondering how to get started with TikTok? Sign up for our free 10-day challenge to learn how to start creating viral videos for your brand!\n\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n\nSIGN UP NOW\n\nBy entering your email, you’re opting-in to receive marketing and product updates from us. You can unsubscribe from these emails any time. Our Terms of Service and Privacy Policy have all the details.\n\n \n\nStandout TikTok Brands of the Week\n@SomeGoodNewsOfficial has been pumping out feel-good content on Instagram since March and they’ve also taken over TikTok. The concept was originally created by John Krasinski as a way to share positive news stories during the challenges of self-isolating and social distancing in COVID-19.\n\nTheir social channels are a constant source of inspiration, positivity, and feel-good stories that you’ll want to bring up in your next Zoom call with friends — and their TikTok channel is no exception.\n\n\nTIP: As you can see with some of Some Good News’s latest posts, animals do really well on TikTok and are a constant source of feel-good content. If there is any way to incorporate animals into your next TikTok video, try it out!\n\n\nSuper simple content goes a long way for your audience on TikTok.\n\nCreators to Watch\n#1: @TabithaBrown, CEO of Joyful Content\nWhen I think of joyful content, I immediately think of Tabitha Brown.\n\nShe has the most contagiously positive energy that radiates through your phone the minute you hear her voice.\n\n\nHer content is a mix of educational content, including the most amazing recipes, to just general wisdom and advice, which all of us need a little more of in our lives.\n\nHer most popular video on how to make guacamole, which has 2 million likes and has been shared over 60K times, is the perfect example of why her presence on the app is so magnetic. Let’s take a look:\n\n\nTabitha has so much feel-good content that she was even snapped up by Ellen Digital Network to be part of the ellentube family!\n\n\nHer TikTok bio says it all: World’s Favorite Mom.\n\n#2: @DadLifeJason, CEO of Serotonin\n@DadLifeJason has almost half a million followers but deserves 10x that! His videos are filled with happiness through music. He’s often on his talk box, singing and dancing with his family.\n\n\nIt’s the kind of content that when you see it on your For You Page, you smile and pause for a second. It’s the type of interruption we all need during our endless bouts of scrolling.\n\n#3: @ThePaperPat, CEO of Teaching Abroad\nIf you’re looking for some videos to brighten up your day, I’d highly recommend checking out @ThePaperPat.\n\nHe is currently in Japan teaching English to kids in kindergarten. Cue the “awws”.\n\n\nHe shows us how he interacts with his students, takes us on a tour of his city, and delivers such simple, enjoyable content about his experience as a teacher in Japan that’ll no doubt put a smile on your face.\n\nNow time for your homework. Take a look at your content plan and ideate new ways to connect with your audience on TikTok and weave feel-good content into your next video — it’s easier than you think!",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/7.png",
        "date" : "June 24, 2020"
      },
      {
        "author" : "kocherty",
        "title" : "How Brands and Creators are Using TikTok to Educate",
        "content" : "There’s no denying that social media platforms have changed shape and focus over the last month to rightfully support the Black Lives Matter movement.\n\nBut with fast-paced and ever-evolving TikTok, it can be tough to spot the positive changes.\n\nWe chatted with Kelsey Docherty, TikTok brand consultant, aficionado, and all-round video content pro to share her insights.\n\nStemming from Kelsey’s trend-watch series on her Instagram @kelsey_tries, we’re chatting educational content, and how brands and creators are using TikTok’s quick video format to level-up our knowledge!\n\nFrom important (and essential) awareness videos for #BLM and #Pride, to product styling tips and hoop dance tutorials, TikTok is here to educate, and we’re here for it.\n\n\nTikTok Trends Overview of the Week\nIf you’ve seen a surge of educational content on your #ForYouPage, you’re not alone.\n\nThe usual dance challenges and quirky TikTok trends have taken a backseat to more important issues. It’s incredible to see brands and creators alike use TikTok as a platform to educate and inform their audience on current events and social issues.\n\nJust look at the shift in content in The Washington Post’s latest stream of videos. They have always been a reliable source of information and have incorporated TikTok trends into their feed when it makes sense.\n\nRecently they’ve created a number of informational videos that educate their audience on white privilege, systemic racism, and the challenges Black journalists face every single day.\n\n\nThe Daily Show with Trevor Noah is another media outlet that is focusing on educating their audience of 1.2M followers on the Black Lives Matter movement, specifically on police brutality, white allyship, and the meaning behind protesting.\n\n\nThe hashtag #LearnOnTikTok has always been popular and you’ll see it featured on the Discover page on TikTok.\n\nIt currently has 7.4B views and thankfully, shows no signs of slowing down as people are craving educational content more than ever.\n\nTikTok often amplifies educational content (like how-to guides, resourceful hacks, and quick tutorials), and recently, we’ve seen the algorithm elevate #BlackLivesMatter content, leveling up educational content and putting it in front of millions of eyes, exactly where it needs to be.\n\nCheck out @kei.honey‘s viral post below. With just 30K followers, Kei’s educational video gained over 750K views and 220K likes!\n\n\nAnother important cultural moment that you can see TikTok amplifying is Pride. The hashtag #MyPride is currently trending on the Discover page and has over 280M views to date.\n\nOne of the top videos you’ll see in hashtag is a series called “History: But Make It Queer”, which has 19 episodes to date. Check out episode 1 below, kicked off by @marcsebastianf:\n\n@marcsebastianf\nnew series—history but make it queer: ep 1. will you copy link so more\n##lgbtq\nkids can see it 🥺🏳️‍🌈\n##gay\n##lesbian\n##bi\n##foryou\n##pride\n♬ Ego – Koren Grace\nTikTok creator @joshhelfgott is also creating some amazing educational content this month, specifically going over what the LGBTQ+ flags represent and why.\n\n\nTo see how other brands and creators are activating on social media for Pride, check out our blog post on How to Plan a Pride Campaign on Social Media.\n\nWith educational content taking prime real estate on TikTok’s For You and Discover pages, it’s clear there’s a cultural shift and demand for content that shares knowledge and personal insight!\n\nStandout TikTok Brand of the Week\nKiitan Akinniranye, @kiitana is a fashion and lifestyle creator and owner of Atarah Avenue, a digital shop for headwraps. She is one of my favorite people to follow on the app and here’s why.\n\n@kiitana\nWhich day of the week are you? I’m sooo Monday!!\n##tiktokfashion\n##outfitsoftheweek\n##fashion\n##style\n♬ Dripeesha Todrick Hall – kristarobertso\nHer content never fails: she uses popular songs, jumps on trends quickly, posts helpful and educational content, and her seamless transitions are *chef’s kiss*.\n\nSo in short, Kiitan has found the perfect balance to promoting her business and getting involved in the fun side of TikTok!\n\nFor example, check out her tutorial on how to style and tie a headwrap:\n\n@kiitana\nThis headwrap style is so quick and easy! Like\/comment for more! Its from AtarahAvenue.com (code 15off)\n##headwrap\n##learnontiktok\n##tiktokpartner\n♬ Kontrol – Maleek Berry\nIt’s the perfect pairing of product promotion, educational content, and engaging video content you know you’ll view more than once.\n\nIf you’re a small brand learning the TikTok ropes, @kiitana is one to watch and learn from! You can also check out our Ultimate Guide to TikTok Marketing to learn more about how to sell your brand on the platform!\n\nTikTok Creators to Watch:\n#1: @NotoriousCree, CEO of Traditional Hoop Dance\nOf course, dance and choreography didn’t completely disappear from TikTok this week because I discovered @NotoriousCree!\n\nJames Jones is an Indigenous traditional hoop dance artist who has performed globally and is ranked among the top five hoop dancers in the world.\n\nHe has just under half a million followers on TikTok and he not only creates beautifully choreographed hoop dance videos and puts his unique twists on popular trends, but also educates his audience on what hoop dancing is, what the hoops represent, and why he dances.\n\n@notoriouscree\nTeachings of the hoop dance, the healing dance\n##nativeamerican\n##SelfCareRoutine\n##native\n##dance\n♬ original sound – notoriouscree\n#2: @DevanOnDeck, CEO of Style + Anime\nDevan’s TikTok videos are fresh, informative, and will likely make you want to go buy a new pair of sneakers (Editor’s note: this actually happened to me. My first pair of Air Force 1 Highs are on their way.)\n\n@devanondeck\nNew Customs from @majorwavezz 🔥 —\n##dbz\n##sneakers\n##sneakerhead\n♬ stars ballin around you – kyleyoumadethat\nHis content is so unique because he’s not only a style inspiration, but his other interests are reflected in his videos, like his love for anime. There is a huge anime community on TikTok and a huge fashion community on TikTok, so he is able to combine the two and create some of the best style content on the app!\n\n#3: @Loganwgood, CEO of Saving the Turtles \nLogan Wood loves the ocean. He also loves cleaning plastic from beaches. The result? Educational and highly addictive content of him cleaning up beaches across the US.\n\n@loganwgood\nComment if you want to see more! 🌎\n##saveouroceans\n##pollution\n##zyxcba\n##homedecor\n##WorldOceansDay\n##fyp\n♬ Say So (Instrumental Version) [Originally Performed by Doja Cat] – Elliot Van Coup\nArmed with just a sifter, gloves, and some garbage bags, Logan is bringing awareness to the pollution on our beaches.\n\n@loganwgood\nIf you chose Cig butts in trivia, you won!\n##pollution\n##savetheworld\n##foryoupage\n##summerofgaming\n##workoutplan\n##fyp\n♬ original sound – loganwgood\nPlus, with some videos getting hundreds of thousands of likes, it’s clear it’s not just a hit for World Oceans Day.\n\nNow that you’re inspired by these brands and creators who are making digestible, quick-fire educational content for their viewers, it’s time for you to do the same!\n\nThink about your brand’s unique point of view and voice and start exploring ways to provide authentic and helpful content to your audience.\n\nWe, as people and brands, should always be seeking ways to better ourselves, our audience, and our content, and what better way to do that then through learning! To quote Nelson Mandela: “Education is the most powerful weapon which you can use to change the world.”",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/8.png",
        "date" : "June 17, 2020"
      },
      {
        "author" : "jessica",
        "title" : "Everything You Need to Know About TikTok Ads",
        "content" : "Thinking about using TikTok Ads for your brand or business?\n\nAs one of the most downloaded apps of 2020 with over 800 million monthly users — now is the time to start.\n\nWhether you’re looking to make sales, drive traffic to your website, or launch a new product, a creative and well-targeted TikTok campaign can drive great (and huge!) results.\n\nIn this guide, discover everything you need to know about the different creative TikTok Ads options.\n\n\nTable of Contents\n\nIntroducing TikTok Ads\nTikTok Ads: In-Feed Ads\nTikTok Ads: Brand Takeover\nTikTok Ads: TopView\nTikTok Ads: Branded Hashtag Challenge\nTikTok Ads: Branded Effects\nHow Much do TikTok Ads Cost?\nHow to Create a TikTok Ad?\nIntroducing TikTok Ads\nFrom targeting, ad creation, insight reports, and ad management tools, TikTok Ads offer a powerful, yet easy-to-use platform to help businesses and brands advertise to millions of users across the globe.\n\n\nWhile TikTok Ads aren’t as popular as Facebook or Instagram ads (yet!), they’re an incredible opportunity for brands looking to widen their reach. And now is the perfect time to start using TikTok ads — since not many brands and businesses have caught on to their potential.\n\nWhether you’re a small business with a limited budget or you’re running a 10-day campaign, TikTok Ads offers a number of unique tools to help brands and businesses excel.\n\nTikTok Ads\nSimilar to Instagram Ad Manager, TikTok’s advertising platform-tools automate the process of creating, delivering, and optimizing your ads.\n\nTikTok Ads currently has two budgeting options: daily or lifetime. With both options, your budget isn’t set in stone — you can adjust your budget anytime throughout your campaign.\n\nYou can also target your audience by gender, location, age, interests, and other unique variables.\n\nAnd similar to Facebook and Instagram’s Ad Manager, you can also create “Custom Audiences” and “Lookalike Audiences” to reach new audiences that are similar to your existing ones.\n\nLet’s get into what TikTok Ads actually look like. TikTok offers a variety of different creative ad formats for brands and businesses to explore. You’ve likely seen most of the different types on your daily TikTok scroll.\n\nHow to Be Successful on TikTok\nHere are the five types of TikTok Ads:\n\nIn-Feed Ads\nBrand Takeover\nTopView\nBranded Hashtag Challenge\nBranded Effects\nWith a variety of different options to choose from, it’s hard to know which ad format is best for your brand — which is why we dive into the different types of TikTok ads and how they can work for your business below.\n\nReady to take your TikTok strategy up a notch? Watch our free 30-minute video on how to use TikTok to grow your brand! \n\n\n\nTikTok Ads: In-Feed Ads \nIn-Feed Ads are the video ads that appear in between user videos as you scroll through your For You page. If you’re unfamiliar with TikTok and the For You page, In-Feed Ads are very similar to the ads you’d see while tapping through Instagram Stories.\n\n\nYou can get super creative with In-Feed Ads. You can include multiple call-to-actions and make your video anywhere between 9 to 15 seconds.\n\nHaving the opportunity to include a call-to-action is a huge advantage. For example, you can encourage users to shop now, download your app, or visit your website right from TikTok.\n\nSee how Adobe uses a clear CTA in their In-Feed Ad below.\n\nHow to Be Successful on TikTok\nOne thing to keep in mind is that like any other video on your For You Page, In-Feed Ads can be scrolled past or skipped pretty quickly. You only have about 2-3 seconds to catch your audience’s eye before they keep scrolling.\n\nIn-Feed Ads should be full screen and should be enticing enough to stop users from scrolling past your content.\n\nWhen it comes to stopping the scroll, Sawyer Hartman, the CEO of Cameras on TikTok, gave some sound advice on our “Talk the Tok” Workshop:\n\n“The text on TikTok videos should establish a problem or grab attention right away. Imagine your perfect viewer is sitting and watching your video with the sound off, what text can you put and what story can you tell that will convince them to turn their sound on?”\n\nSAWYER HARTMAN\n\nHear more tips and tricks from Sawyer and our other TikTok experts in the full TikTok Workshop here:\n\n\n\nAnother positive to In-Feed Ads? TikTok users can like, comment, share, and interact with your video just like any other video on the For You page.\n\nTIP: Work with influencers for your In-Feed ads! Take Levi’s for example.\n\nLevi’s worked with several TikTok creators — sending each of them their Future Finish 3D denim customization technology, giving them full creative control over their jeans.\n\nTikTok Ads\nThe creators’ videos appeared on TikTok as In-Feed Ads where users could click on the “Shop Now” button to buy the same design on Levi’s website.\n\nTikTok Ads: Brand Takeover \nHave you ever opened up TikTok and received an ad right away? If so, those are Brand Takeover Ads.\n\nBrand Takeover Ads appear upon opening the app — presenting a full-screen video to your targeted audience.\n\n\n \n\nThey’re one of TikTok Ad’s best options for delivering mass awareness and driving direct sales since you can place your messaging right in front of your target audience.\n\nNot only do these ads show up as soon as users open TikTok, but they can also appear on the For You page as still images, GIFs or videos — including a clickable link driving users to a landing page or a Hashtag Challenge within TikTok.\n\nSee how Guess Jeans had their #InMyDenim Challenge advertised all across TikTok. The photo below on the far left is an example of a Brand Takeover.\n\nHow to Go Viral on TikTok\nSource: TikTok Ads\n\nBrand Takeover Ads are exclusive to their category, which means that TikTok makes sure users don’t see more than one Brand Takeover per day. With Brand Takeover Ads you can expect a lot of eyes on your content with little competition.\n\nIf you’re just starting out with TikTok Ads, Brand Takeovers may not be your first choice. Because, while super effective, Brand Takeovers do come at a high cost.\n\nIf you’re a bigger brand with a large marketing budget, they are a great option for fast growth and reaching a large group of TikTok users.\n\nJoin Our Free TikTok Challenge!\nWondering how to get started with TikTok? Sign up for our free 10-day challenge to learn how to start creating viral videos for your brand!\n\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n\nSIGN UP NOW\n\nBy entering your email, you’re opting-in to receive marketing and product updates from us. You can unsubscribe from these emails any time. Our Terms of Service and Privacy Policy have all the details.\n\n \n\nTikTok Ads: TopView \nTopView Ads are a new advertising option that builds on Brand Takeovers.\n\nWhat makes TopView Ads different is that unlike Branded Takeover Ads, TikTok users aren’t bombarded with an ad as soon as they open the app — TopView Ads are the first in-feed post after 3 seconds.\n\n\nTikTok Ads\n\nIt shows up at the top of the For You page, TikTok’s most premium real estate, with up to 60-seconds of full-screen video with auto-play and sound.\n\nTikTok Ads: Branded Hashtag Challenge \nBranded Hashtag Challenges are a one-of-a-kind advertising opportunity exclusively to TikTok. You’ve probably seen branded hashtag challenges displayed on TikTok’s Discovery page.\n\nSimilar to regular hashtag trends and challenges on TikTok, Branded Hashtags Challenges offer both organic and sponsored opportunities for brands.\n\n\n \n\nThey’re a great way to encourage user-generated content and build brand awareness.\n\nThe best part about Branded Hashtag Challenges? You can have a ton of fun with them! They are an awesome way for brands to collaborate and seamlessly integrate themselves into the TikTok culture and community.\n\nIt’s important to have concrete objectives when you’re creating a Branded Hashtag Challenge. Are you looking to create awareness for a new product? Generate new leads? Or increase general brand awareness?\n\nWhen a user clicks on a sponsored hashtag, they’re taken to a landing page on TikTok with the brand logo, link to their website, brief description of the challenge, and popular videos using the hashtag.\n\nTikTok Ads\nIf you’re looking for maximum exposure, you can pay up to a hefty $150,000 per day to show up on TikTok’s Discover banner. That’s huge real estate but it’s not the only way to get users engaged with your branded hashtag.\n\nTIP: If you’re looking for a less costly alternative, partner with popular creators on TikTok, like Houseparty and Freal Milkshakes below, to help your challenge take off!\n\nCheck out how the popular video messaging app, Houseparty, uses branded hashtags in a recent campaign on TikTok.\n\nSee how Houseparty partnered with Gen-Z heartthrob Chase Stokes (or better known as “John B” from Outer Banks) to help push their hashtag even further.\n\n\nAnother example is Freal Milkshakes. The popular milkshake machine also partnered with popular TikTok creators to show off their creations.\n\n\n \n\nSince the campaign, @therealfreal has over 500 thousand followers with over 200 million hashtag video views with users showing off their milkshakes.\n\nICYMI: TikTok now offers an e-commerce feature called the Hashtag Challenge Plus — a feature that lets users shop for products right in the app.\n\nThe Hashtag Challenge Plus feature — which has only started rolling out on select accounts — offers a separate “Discover” tab on the hashtag’s landing page where TikTok users can browse products from the campaign and purchase them right within TikTok.\n\n\nTikTok Ads: Branded Effects\nTikTok now offers branded shareable stickers, AR filters, and lenses in their advertising mix.\n\nSimilar to Snapchat’s branded lenses, TikTok’s branded effects allow brands to design their own custom filter on the app.\n\n\nTikTok Ads\n\nBranded Effects can be live for up to 10 days at a time and are an awesome way to encourage users to directly interact with your brand (in a fun way!).\n\nHow Much do TikTok Ads Cost?\nTikTok Ads are new to the scene — brands and businesses are still experimenting with the platform — so understanding the average spend or return on investment (ROI) is difficult.\n\nSo, if you’re a small business and want to give TikTok ads a try, don’t let the unknown scare you off right away — spending big bucks on TikTok isn’t the only way to advertise on the popular app.\n\nYou can set up a free TikTok Ads account and create In-Feed ads with your own set budget and schedule. Currently, TikTok’s minimum campaign budget is $500 and the minimum ad group budget is $50.\n\nHowever, it has also been reported that the cost of advertising on TikTok can be anywhere from $50,000 to $120,000, depending on the type and duration.\n\nIf these reported numbers are true, it would make sense as to why we haven’t really seen smaller businesses advertising on TikTok just yet.\n\nAs more brands begin to engage and use TikTok Ads, it will become more clear whether TikTok will follow a similar model to Instagram and Facebook ads where (no budget is too small), or if they will continue to keep certain ad types, like branded hashtag challenges, as elite spends.\n\nWatch this space!\n\nHow to Create a TikTok Ad\nNow that you’re familiar with TikTok’s creative advertising options, it’s time to talk about the tools that help get your ads into action.\n\nBefore you can go ahead and create ads on TikTok, even In-Feed ads, you have to be approved by TikTok. It’s not a difficult process, just an extra step to keep in mind.\n\nHere is how to request a TikTok Ads account:\n\n#1: Head to the TikTok Ads homepage.\n\n\n#2: Enter your country and account type and press “Next”.\n\n\n#3: TikTok Ads is currently only available in certain regions. Fill out all of your contact information and depending on if TikTok Ads self-serve is available in your region, either press “Make a Reservation” or “Inform me of Future Updates”.\n\nNote: TikTok Ads Manager self-serve platform is now available in the United States for businesses of all sizes.\n\n\n#4: Now it’s time to wait for TikTok to send more information.  Make sure to double-check all your email folders (promotions, social, junk, etc).\n\nFollow these steps if you don’t receive verification.\n\nTIP: If you know you want to start advertising on TikTok in the future (even if it’s not for a while!) create an account sooner than later to be sure you have it there when you’re ready.\n\nOnce you get the verification email, TikTok asks a number of questions about your business and advertising goals. After you submit the questionnaire, a TikTok representative will be in touch with you over email to help you complete the process.\n\nFollowing that, you’ll be able to enter and officially set up your account.\n\nOn TikTok’s self-serve platform, you can create and run campaigns, easily define your target audience, select bidding methods, and design your ad creative.\n\nNote: As of right now, it’s unclear whether you can login to the platform and create a Branded Hashtag Challenge campaign or if you need to work directly with a TikTok sales rep to do so. According to Digiday, some advertising campaigns are managed and monitored by TikTok’s own team.\n\nAnd there you have it, our quick guide to TikTok Ads.\n\nBy now, you should have a clear understanding of TikTok’s creative advertising options and the early steps on how you can put them into practice for your business.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/9.png",
        "date" : "June 12, 2020"
      },
      {
        "author" : "katper",
        "title" : "The Best Time to Post on TikTok in 2021",
        "content" : "Your best time to post on TikTok can seem mysterious, but once you have it figured out, you’ll soon start to reap the benefits.\n\nFrom reaching new engaged audiences to seeing a boost in likes, comments, and followers, your best time to post is the key to unlocking your best TikTok engagement.\n\nTo help you find your best time to post and build a killer TikTok strategy in 2021, we’re covering everything you need to know in this blog post.\n\n\nWhat is the Best Time to Post on TikTok?  \nThe first thing to know is that there’s no one-size-fits-all approach to finding your best time to post — every brand, business, or influencer on TikTok will have a slightly different best time to post.\n\nHow To Figure Out The Best Time To Post On TikTok\nAs just by knowing your best time to post, you’re giving yourself a unique advantage.\n\nPlus, once you’ve discovered your best time to post, you can get early access to Later’s TikTok scheduling tools.\n\nWith TikTok Planning and Scheduling, you’ll always be able to share your videos at the perfect time for your audience — so you’ll never miss an engagement opportunity again.\n\nGet exclusive early access to visual planning and scheduling for TikTok on web and mobile.\n\n  EARLY ACCESS \n\nSchedule TikTok videos from your laptop or phone\nVisually plan and schedule your TikTok videos right inside Later. Available on paid plans.\n\nSign Me Up\n\n \n\nReady to discover your best time to post on TikTok? Here are 4 steps to help you get started:\n\nStep #1: Create A Pro Account\nTikTok’s analytics are only available on Pro Accounts, which means that if you’re serious about growing on TikTok, now’s the time to make the upgrade.\n\nSwitching to a Pro TikTok account will unlock your profile’s metrics and data insights, and these analytics are key to figuring out your best time to post.\n\nTikTok Pro\nHere’s how to switch to a Pro TikTok Account:\n\nGo to the “Manage my account” section by tapping the three dots in the top right corner of your profile page\nSelect “Switch to Pro account”\nChoose your business industry\nYour TikTok account will reload a Pro Account with a new analytics section\nHow To Figure Out The Best Time To Post On TikTok\nWithin the analytics section of a Pro account, you’ll find 3 tabs: Overview, Content, and Followers.\n\nTap the Followers tab to track your follower growth, top territories, and followers’ activities:\n\nHow To Figure Out The Best Time To Post On TikTok\nTIP: Keep track of your follower growth on a separate reporting template and log it daily, as the app only stores the last 28 days of data.\n\nNot only will sparks in your follower growth be indicators of your best time to post each week, but it will also indicate that you’ve shared content your audience loves! Use that to inform your content and posting strategy for the future.\n\nStep #2: Identify Your Top Territories \nThanks to TikTok’s Top Territories analytics, it’s easy to find out where your audience is based, which will help you figure out your best time to post.\n\nHow To Figure Out The Best Time To Post On TikTok\nIn this example, a good portion of our audience is based in the US, with smaller percentages scattered across Europe, Canada, and Mexico.\n\nHowever, unlike Instagram, TikTok doesn’t break this info down into cities, so while we know the US is the main audience, there’s a lot of different time zones to take into account.\n\nFor example, if you’re a brand based in NYC and assume the majority of your audience is living on Eastern Standard Time, you’ll definitely want to capture audiences within that time zone when you post.\n\nBut you have to take into account that most people on the West Coast are asleep at 8 am EST, so you could be missing out on engagement if you don’t take this into account.\n\nSo your business’ best times to post on TikTok could go beyond a schedule you’re used to.\n\n“At Later, a majority of our audience on TikTok is US-based so we try not to post too early or too late to exclude any of our audience. Our sweet spot tends to be midday PST to catch most people and timezones.”\n\n– LINDSAY ASHCRAFT, SOCIAL MEDIA COORDINATOR AT LATER\n\nPlus, the TikTok algorithm factors in where you post content from.\n\nThe Later team is based all over the world, across multiple time zones and we all take part in creating content for our TikTok profile — that’s why you’ll see so many different faces there!\n\nThat also means we post from all over the world, from Northern California to London.\n\nWhen Is The Best Time To Post On TikTok? \nSo if you’re consistently posting from the same location, the chances are you’ll build a stronger audience there.\n\nIt’s important to identify where the majority of your audience is based, and then try to predict when they’ll most be active online.\n\nLooking to level-up your TikTok skills? Join Later’s 10-day Challenge! Each day we’ll show you a new TikTok skill or hack that you can use on your own TikTok feed.\n\nJoin Our Free TikTok Challenge!\nWondering how to get started with TikTok? Sign up for our free 10-day challenge to learn how to start creating viral videos for your brand!\n\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n\nSIGN UP NOW\n\nBy entering your email, you’re opting-in to receive marketing and product updates from us. You can unsubscribe from these emails any time. Our Terms of Service and Privacy Policy have all the details.\n\n \n\nStep #3: Know When Your Audience is Most Active \nTikTok’s built-in analytics may seem a little basic, but don’t be fooled.\n\nEverything you need to figure out the best time to post is in the Analytics tab, especially when it comes to knowing when your audience is most active.\n\nUnder the Follower tab of your TikTok Analytics, scroll down to find the “Follower Activity” section.\n\nWhen Is The Best Time To Post On TikTok? \nHere you’ll find detailed information on your audience’s most active hours and days.\n\nNOTE: All information in TikTok analytics is recorded in Coordinated Universal Time (UTC). As a result, you’ll need to convert the hours that your followers are most active into the timezones of your audience’s location.\n\nWhen Is The Best Time To Post On TikTok? \nFrom this example, you can see that our followers are most active at 7pm UTC, which is 12pm PST and 3pm EST.\n\nTIP: Use a timezone conversion tool to easily switch between time zones.\n\nStep #4: Track and Measure Your Content Performance \nThe final step to understanding your best time to post is to monitor your content performance.\n\nDelving into the analytics for top posts is a great way to learn how your posting times correlate to performance.\n\nUnder the Content tab in TikTok Analytics, you’ll be able to see all your posts’ performance over the last 7 days.\n\nWhen Is The Best Time To Post On TikTok? \nOnce you click on a video, you’ll be able to see tons of performance data on your content — like total views, average watch time, traffic source time, as well as where in the world your views came from.\n\nTo help you figure out your best time to post, first take a look at the overall performance — how many likes, comments, and shares the video received.\n\nWhen Is The Best Time To Post On TikTok? \nTake a look and see, is there a connection between when the TikTok video was posted and how well it performed?\n\nWhen Is The Best Time To Post On TikTok? \nIt’s really useful to keep a spreadsheet or reporting document to track all your TikTok content performance, especially as TikTok only captures data for the last 7 days.\n\nHere’s a couple of metrics you’ll want to keep track of per video:\n\nPosting Date and Time\nVideo Likes\nVideo Comments\nVideo Shares\nTotal Play Time\nTotal Video Views\nTraffic Source Types\nTotal Reached Audience\nTop Audience Territories\nWe’ve created our own reporting template to make it easier for you to get started: Later Social Media Reporting Template: \n\nFree Social Media Reporting Templates\nemail@website.com\n\nIndustry\n\nNumber of Instagram Followers\n Yes, I would like to receive email marketing communication from Later. I understand that I can unsubscribe at any time.\n\nDOWNLOAD NOW\n\nBy entering your email, you’re accepting Later's Terms of Service and Privacy Policy.\n\n \n\nWhen it comes to honing in on your best time to post, take note of the content that performed the best each week and identify when it was posted.\n\nVideo Performance + Time Posted + Audience Timezone = Best Time to Post \n\nOf course, there is still a bit of guesswork left in the mix — as we already mention, there is no definitive answer of when every brand should post to TikTok!\n\nBut this should give you a strong indication of what time will work for you and your audience.\n\nFrom here, you can fine-tune as you start to manage and measure your content performance.\n\nYou may notice that as your profile grows, your audience location and online behaviors change too, so keep checking in on your reporting and altering your strategy.\n\nWhile getting to grips with TikTok analytics and the best time to post can feel daunting, there’s a huge payoff for your brand.",
        "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/10.png",
        "date" : "May 6, 2020"
      }
    ]
  },
  "setting" : [
    {
      "title" : "Favorite",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/favorite.png",
      "content" : "",
      "controller" : "TLKatFavoriteController"
    },
    {
      "title" : "Feedback",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/feedback.png",
      "content" : "",
      "controller" : "TLKatFeedbackController"
    },
    {
      "title" : "Share",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/share.png",
      "content" : "",
      "controller" : ""
    },
    {
      "title" : "Privacy Policy",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/pp.png",
      "content" : "",
      "controller" : "TLKatPrivacyPolicyController"
    },
    {
      "title" : "About us",
      "icon" : "https:\/\/raw.githubusercontent.com\/jamlater\/TikLater\/main\/imgs\/about.png",
      "content" : "Welcome to use this application and related services!\n\nIn order to provide you with better services, please carefully read the \"Terms of Use and Privacy Policy of this Application\" (hereinafter referred to as \"this agreement\"). Before you start to use this application software and related services, please be sure to read and fully understand this agreement, especially the terms related to exemption or limitation of liability, terms of rights and licenses and information use, and terms of agreeing to open and use special individual services , Law application and dispute resolution clauses, etc. If you are under the age of 18, please read and fully understand this agreement accompanied by your legal guardian, and download the software after obtaining the consent of the legal guardian.\n\nIf you use this application software and related services, it is deemed that you have fully understood this agreement and promised to accept the constraints of the agreement as a party to this agreement.\n\nUser personal information\n\nWithout your permission, we will not collect your personal information, except in the following cases:\n\n(1) Obtain your explicit authorization in advance;\n\n(2) You share, transfer or disclose to a third party by yourself;\n\n(3) It is directly related to national security, national defense security, public security, public health, and public interests;\n\n(4) Disclosure or provide in accordance with applicable laws, regulations, procedures, and mandatory administrative and judicial requirements, or where it is directly related to criminal investigation, prosecution, trial, and execution of judgments; we will follow all The type of personal information required and the method of disclosure publicly disclose your personal information. Under the premise of complying with laws and regulations, when we receive the above request for information disclosure, we will require the corresponding legal documents, such as subpoenas or investigation letters, to be issued. We will carefully review all requests to ensure that they have a legal basis and are limited to data that the administrative and judicial departments have legal rights to obtain for specific investigation purposes;\n\nUser Code of Conduct\n\n1 User behavior requirements\n\nYou should be responsible for your use of this product and related services. Unless permitted by law or with our prior written permission, your use of this application software and related services must not have the following behaviors:\n\n1.1 Use any plug-in, plug-in, system or third-party tool that is not authorized or licensed by us to interfere, destroy, modify or exert other influences on the normal operation of this application software and related services.\n\n1.2 Use or conduct any behavior that endangers computer network security by using or targeting this application software and related services, including but not limited to:\n\n(1) Activities that endanger network security, such as illegally hacking into another person's network, interfering with the normal function of another person's network, and stealing network data;\n\n(2) Provide programs and tools specially used to engage in network security activities such as intruding into the network, interfering with normal network functions and protective measures, and stealing network data;\n\n(3) Provide technical support, advertising promotion, payment and settlement, etc., if you know that others are engaged in activities that endanger network security\n\n(4) Use unauthorized data or access unauthorized servers\/accounts;\n\n(5) Enter the public computer network or the computer system of another person without permission and delete, modify, or add stored information;\n\n(6) Without permission, attempt to probe, scan, test the weakness of the application system or network, or implement other behaviors that undermine network security;\n\n(7) Attempt to interfere or disrupt the normal operation of this application system or website, deliberately spread malicious programs or viruses, and other acts that disrupt and interfere with normal network information services;\n\n(8) Forged TCP\/IP data packet name or partial name.\n\n1.3 Reverse engineer, reverse assemble, compile, or otherwise try to discover the source code of this application software.\n\n1.4 Violation of laws and regulations, this agreement, our relevant rules and other acts that infringe on the legal rights of others.\n\nIn any case, if we have reason to believe that any of your actions violated or may violate the above agreement, we can make independent judgment and deal with it, and at any time have the right to terminate the service to users with any prior notice. And hold relevant responsibilities.\n\nDisclaimer\n\n1 You understand and agree that this application software and related services may be affected or interfered by a variety of factors, and we do not guarantee (including but not limited to):\n\n1.1 We are fully suitable for the user's requirements;\n\n1.2 We are not disturbed, timely, safe, reliable or error-free; any software, services or other materials obtained by users through us meet the expectations of users;\n\n1.3 Any errors in the software will be corrected.\n\n2 Regarding the suspected borrowing or other property-related network information, account passwords, advertisements or promotion information, users should be cautious and make their own judgments. Based on the foregoing reasons, you have suffered profit, business reputation, data loss or other tangible or intangible information. We are not responsible for any direct, indirect, incidental, special, derivative or punitive compensation for losses.\n\n3 The user understands and agrees that in the process of using this application software and related services, it may encounter force majeure and other factors (force majeure refers to an objective event that cannot be foreseen, cannot be overcome, and cannot be avoided), including but not limited to government actions, natural disasters, Network reasons, hacker attacks, wars or any other similar incidents. When a force majeure situation occurs, we will try to repair it in a timely manner, but the user agrees that we will not be liable for losses caused by the force majeure.\n\n4 We obtain the right to deal with illegal content in accordance with this agreement. This right does not constitute our obligation or commitment, and we cannot guarantee timely detection of illegal activities or corresponding handling.\n\n5 The user reads, understands and agrees: Regarding the services of this agreement, we do not provide any kind of express or implied warranties or conditions, including but not limited to commercial marketability, applicability for specific purposes, etc. Your use of the software and related services of this agreement must be at your own risk.\n\n6 The user reads, understands and agrees that this agreement is to ensure compliance with national laws and regulations, maintain public order and good customs, and protect the legitimate rights and interests of others. We will do our best to make judgments in accordance with relevant laws and regulations within the scope of our ability, but we do not guarantee that our judgments are completely consistent with The judgments of the judicial and administrative agencies are consistent, and the user has understood and agreed to bear the consequences.\n\nother\n\n1 The establishment, entry into force, performance, interpretation and dispute resolution of this agreement shall be governed by the laws of the mainland of the People’s Republic of China. If any provisions of this agreement are invalid due to conflicts with the laws of the mainland of the People's Republic of China, these terms will be as close as possible to the original intent of this agreement to re-analyze, and other provisions of this agreement shall still have full force and effect.\n\n2 We have the right to modify this agreement in accordance with changes in national policies, technical conditions, product features, etc., and we will publish the modified agreement. Once the foregoing content is officially released and delivered to users in an appropriate manner (website announcement, system notification, etc.), it is an integral part of this agreement, and you should also comply with it. If you disagree with the modified agreement, please stop logging in and using the application software and related services immediately. If you log in or continue to use the application software and related services, you shall be deemed to have approved the modified agreement.\n\n4 The headings in this agreement are provided for convenience and reading only, and do not affect the meaning or interpretation of any provisions in this agreement.\n\n5 You and us are independent entities. Under any circumstances, this agreement does not constitute any form of express or implied guarantee or condition for users, nor does it constitute an agency, partnership, joint venture or employment relationship between the two parties.\n\n6 The copyright of this agreement belongs to us, and we reserve all rights of interpretation and modification.",
      "controller" : "TLKatAboutController"
    }
  ]
}
